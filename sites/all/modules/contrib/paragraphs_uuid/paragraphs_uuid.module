<?php
/**
 * @file
 * Provide UUID support for Paragraphs.
 *
 * This code is taken from this issue below to solve challenges with
 * Paragraphs - https://www.drupal.org/project/paragraphs.
 * This also implements the VUUID for paragraphs revisions.
 */

/**
 * Implements hook_field_uuid_load().
 */
function paragraphs_field_uuid_load($entity_type, $entity, $field, $instance, $langcode, &$items) {
  entity_property_id_to_uuid ( $items, 'paragraphs_item', 'value' );
}

/**
 * Implements hook_field_uuid_presave().
 */
function paragraphs_field_uuid_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  entity_property_uuid_to_id ( $items, 'paragraphs_item', 'value' );
  // Update the revision_ids of the field to match the head revisions
  // of the entities.
  $entity_ids = array();
  foreach ( $items as $item ) {
    $entity_ids[] = $item['value'];
  }

  $paragraphs = entity_load ("paragraphs_item", $entity_ids);
  foreach ( $items as &$item ) {
    $item['revision_id'] = $paragraphs[$item['value']]->revision_id;
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function paragraphs_uuid_entity_info_alter(&$entity_info) {
  $entity_info['paragraphs_item']['uuid'] = TRUE;
  $entity_info['paragraphs_item']['entity keys']['uuid'] = 'uuid';
  $entity_info['paragraphs_item']['entity keys']['revision uuid'] = 'vuuid';
  $entity_info['paragraphs_item']['entity class'] = 'UUIDParagraphsItemEntity';
}

/**
 * Implements hook_services_request_preprocess_alter().
 */
function paragraphs_uuid_services_request_preprocess_alter($controller, &$args) {
  foreach ( $args as $i => $arg ) {
    if (is_array ( $arg ) && isset ( $arg['type'] )) {
      foreach ( field_info_instances ( $args[0], $arg['type'] ) as $field_value ) {
        if (isset ( $field_value['type'] ) && $field_value['type'] == "paragraphs") {
          foreach ( $arg[$field_value['field_name']][LANGUAGE_NONE] as $delta => $value ) {
            $target = reset ( entity_get_id_by_uuid( 'paragraphs_item', array($value['value'])));
            $args[$i][$field_value['field_name']][LANGUAGE_NONE][$delta] = array(
                'value' => $target,
                'revision_id' => db_query('SELECT MAX(revision_id) FROM {paragraphs_item_revision}')->fetchField()
            );
          }
        }
      }
    }
  }
}

/**
 * Implements hook_field_entity_dependencies().
 */
function paragraphs_field_entity_dependencies($entity_type, $entity, $field, $instance, $langcode, $items) {
  $dependencies = array();
  entity_dependency_add( $dependencies, $items, 'paragraphs_item', 'value' );
  return $dependencies;
}